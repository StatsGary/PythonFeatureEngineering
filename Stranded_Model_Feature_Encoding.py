# ------------------------------------------------------------------------------------------------
#                            Code written by Gary Hutson aka Hutsons-hacks.info
# ------------------------------------------------------------------------------------------------


#!/usr/bin/env python
# coding: utf-8

# ------------------------------------------------------------------------------------------------
#                            Feature encoding
# ------------------------------------------------------------------------------------------------
import pandas as pd
import numpy as np

df = pd.read_csv("https://hutsons-hacks.info/wp-content/uploads/2021/04/LongLOSData.csv")
# Read the Long Length of Stay patient dataset from my website
# This is an autogenerated list and based off 
print(df.head())
# Get rid of null values
print(df.dropna())
print(df.dtypes)



# Select only the object - categorical data types for processing
cat_df = df.select_dtypes(include=['object']).copy() #Create a copy of the df and 
print(cat_df.head())

# ------------------------------------------------------------------------------------------------
#                            Label encoding
# ------------------------------------------------------------------------------------------------
cat_df = cat_df.drop(['stranded.label', 'admit_date'], axis=1) # Drop the labels from the data frame
# Convert each factor level to and index
cat_df['frailty_index'] = cat_df["frailty_index"].astype('category')
print(cat_df.dtypes)

# Create the category codes
cat_df['frail_index.cat_code'] = cat_df['frailty_index'].cat.codes
# Add a column called frail_index.cat_code to the category data.frame

print(cat_df.head())

# This allows for us to reference the index, but wouldn't be great for ML models, as there is no implicit order to these categories. 
# the best approach would be one hot encoding
# ------------------------------------------------------------------------------------------------
#                            One Hot Encoding
# ------------------------------------------------------------------------------------------------
# Using the same approach, we will use one hot encoding - which is the favoured approach for ML models
pd.get_dummies(cat_df, columns=['frailty_index'])
# Add a prefix to this code
dummies = pd.get_dummies(cat_df, columns=['frailty_index'], prefix=['frail'])
print(dummies)
combined = pd.concat([df, dummies], axis=1)
print(combined)


# Drop the fields you don't need from the concatenated frame
final_df = combined.drop(['admit_date', 'frailty_index', 'frail_index.cat_code'], axis=1)
print(final_df)

# ------------------------------------------------------------------------------------------------
#                           Custom Encoding
# ------------------------------------------------------------------------------------------------
cat_df['frailty_index'].value_counts()
cat_df['mobility_issues'] = np.where(cat_df['frailty_index'].str.contains("Mobility problems"),1,0)
print(cat_df)

